language: generic
sudo: required

os:
  - osx
  - linux

matrix:
  include:
    - os: linux
      dist: bionic
    - os: osx
      osx_image: xcode9.4

env:
  # Build and test package on all supported python versions
  - BUILD_TARGET=3.7 MINICONDA_VERSION=latest
  # To make sure it's still working with conda 4.6
  # - BUILD_TARGET=3.7 MINICONDA_VERSION=4.6.14

addons:
  apt:
    packages:
      - libglew-dev
      - libicu-dev
      - libpng-dev
      - libsdl2-dev
      - libsdl2-image-dev
      - libsdl2-mixer-dev
      - libsdl2-ttf-dev
      - zlib1g-dev

services:
  - xvfb

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then MINICONDA_OS=Linux; else MINICONDA_OS=MacOSX; fi
  - wget https://repo.continuum.io/miniconda/Miniconda3-$MINICONDA_VERSION-$MINICONDA_OS-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda config --set channel_priority flexible
  - conda config --add channels conda-forge
  - conda config --add channels tpeulen
  - conda config --add channels salilab
  - conda update -q conda
  - conda info -a
  - conda create -q -n build-environment python=$BUILD_TARGET conda-build anaconda-client jinja2 git nose coverage numpy
  - source activate build-environment
  - git fetch --unshallow --tags --force
  - conda build conda-recipe --output-folder bld-dir
  - conda config --add channels "file://`pwd`/bld-dir"

install:
  - conda install chisurf python=3.7.3

script:
  # osx does not have xvfb server for unit tests of gui
  # therefore run unitests on linux and on osx the conda
  # installation and startup.
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]];
    then
      pip install codacy-coverage
      python setup.py build_ext --inplace --force
      xvfb-run --server-args="-screen 0 1280x1024x24 +extension GLX" -a nosetests --with-coverage test/test_*.py;
      coverage xml
      python-codacy-coverage -r coverage.xml
    else
      conda install chisurf --use-local
      chisurf&
      sleep 120
      pgrep -f chisurf | awk '{print "kill -9 " $1}' | sh
    fi

#after_success:
#  - OS=$TRAVIS_OS_NAME-64
#  - |
#    if [[ "$TRAVIS_BRANCH" == "master" ]];
#    then
#      anaconda upload bld-dir/**/chisurf*.tar.bz2
#    fi

notifications:
  email:
    recipients:
      - thomas.otavio.peulen@gmail.com
    on_success: change # default:
    on_failure: always # default: always
