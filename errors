Saving from ExperimentalDataSelector menu (right click save) causes
a recursion

---------
Create global fit with two FCS curves

/Users/tpeulen/miniconda3/envs/chisurf/bin/python /Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/main_gui.py
loading filename:  /Users/tpeulen/.chisurf/settings_chisurf.yaml
objc[10944]: Class FIFinderSyncExtensionHost is implemented in both /System/Library/PrivateFrameworks/FinderKit.framework/Versions/A/FinderKit (0x7fff996023d8) and /System/Library/PrivateFrameworks/FileProvider.framework/OverrideBundles/FinderSyncCollaborationFileProviderOverride.bundle/Contents/MacOS/FinderSyncCollaborationFileProviderOverride (0x13a135f50). One of the two will be used. Which one is undefined.
Uncaught exception:
   File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/main_gui.py", line 201, in subWindowActivated
    self.current_fit.model.update()
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/models/global_model/globalfit.py", line 347, in update
    super().update()
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/models/model.py", line 215, in update
    self.update_plots()
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/models/model.py", line 198, in update_plots
    p.update(*args, **kwargs)
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/plots/wr_plot.py", line 69, in update
    w_res = fi.weighted_residuals
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/fitting/fit.py", line 145, in weighted_residuals
    y=wres_y
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/curve.py", line 93, in __init__
    "length of x (%s) and y (%s) differ" % (len(x), len(y))

ValueError: length of x (0) and y (234) differ
Traceback (most recent call last):
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/main_gui.py", line 201, in subWindowActivated
    self.current_fit.model.update()
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/models/global_model/globalfit.py", line 347, in update
    super().update()
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/models/model.py", line 215, in update
    self.update_plots()
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/models/model.py", line 198, in update_plots
    p.update(*args, **kwargs)
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/plots/wr_plot.py", line 69, in update
    w_res = fi.weighted_residuals
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/fitting/fit.py", line 145, in weighted_residuals
    y=wres_y
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/curve.py", line 93, in __init__
    "length of x (%s) and y (%s) differ" % (len(x), len(y))
ValueError: length of x (0) and y (234) differ


---------------

Change name of correlation curve in list


Correlation Nbr.: 3
Correlation Nbr.: 4
Correlation Nbr.: 5
correlation done
Traceback (most recent call last):
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/experiments/widgets.py", line 216, in onItemChanged
    ds.name = str(self.currentItem().text(0))
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/base.py", line 174, in __setattr__
    raise AttributeError("can't set attribute")
AttributeError: can't set attribute

---------------


objc[30642]: Class FIFinderSyncExtensionHost is implemented in both /System/Library/PrivateFrameworks/FinderKit.framework/Versions/A/FinderKit (0x7fffb14283d8) and /System/Library/PrivateFrameworks/FileProvider.framework/OverrideBundles/FinderSyncCollaborationFileProviderOverride.bundle/Contents/MacOS/FinderSyncCollaborationFileProviderOverride (0x12f2bef50). One of the two will be used. Which one is undefined.
/Users/tpeulen/miniconda3/envs/chisurf/lib/python3.7/site-packages/pyqtgraph/graphicsItems/PlotDataItem.py:533: RuntimeWarning: divide by zero encountered in log10
  y = np.log10(y)
Traceback (most recent call last):
  File "/Users/tpeulen/miniconda3/envs/chisurf/lib/python3.7/site-packages/pyqtgraph/graphicsItems/PlotCurveItem.py", line 175, in boundingRect
    (ymn, ymx) = self.dataBounds(ax=1)
  File "/Users/tpeulen/miniconda3/envs/chisurf/lib/python3.7/site-packages/pyqtgraph/graphicsItems/PlotCurveItem.py", line 135, in dataBounds
    b = (d.min(), d.max())
  File "/Users/tpeulen/miniconda3/envs/chisurf/lib/python3.7/site-packages/numpy/core/_methods.py", line 34, in _amin
    return umr_minimum(a, axis, None, out, keepdims, initial, where)
ValueError: zero-size array to reduction operation minimum which has no identity

Process finished with exit code 134 (interrupted by signal 6: SIGABRT)


------------

Python 3.7.3 | packaged by conda-forge | (default, Jul  1 2019, 14:38:56)
Type 'copyright', 'credits' or 'license' for more information
IPython 7.9.0 -- An enhanced Interactive Python. Type '?' for help.
PyDev console: using IPython 7.9.0
Python 3.7.3 | packaged by conda-forge | (default, Jul  1 2019, 14:38:56)
[Clang 4.0.1 (tags/RELEASE_401/final)] on darwin
import chisurf.fitting
Traceback (most recent call last):
  File "/Users/tpeulen/miniconda3/envs/chisurf/lib/python3.7/site-packages/IPython/core/interactiveshell.py", line 3326, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-2-7461b471f6b3>", line 1, in <module>
    import chisurf.fitting
  File "/Applications/PyCharm.app/Contents/helpers/pydev/_pydev_bundle/pydev_import_hook.py", line 21, in do_import
    module = self._system_import(name, *args, **kwargs)
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/fitting/__init__.py", line 10, in <module>
    import chisurf.fitting.parameter
  File "/Applications/PyCharm.app/Contents/helpers/pydev/_pydev_bundle/pydev_import_hook.py", line 21, in do_import
    module = self._system_import(name, *args, **kwargs)
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/fitting/parameter.py", line 17, in <module>
    import chisurf.models.model
  File "/Applications/PyCharm.app/Contents/helpers/pydev/_pydev_bundle/pydev_import_hook.py", line 21, in do_import
    module = self._system_import(name, *args, **kwargs)
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/models/__init__.py", line 15, in <module>
    import chisurf.models.model
  File "/Applications/PyCharm.app/Contents/helpers/pydev/_pydev_bundle/pydev_import_hook.py", line 21, in do_import
    module = self._system_import(name, *args, **kwargs)
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/models/model.py", line 9, in <module>
    import chisurf.plots
  File "/Applications/PyCharm.app/Contents/helpers/pydev/_pydev_bundle/pydev_import_hook.py", line 21, in do_import
    module = self._system_import(name, *args, **kwargs)
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/plots/__init__.py", line 3, in <module>
    import chisurf.plots.av_plot
  File "/Applications/PyCharm.app/Contents/helpers/pydev/_pydev_bundle/pydev_import_hook.py", line 21, in do_import
    module = self._system_import(name, *args, **kwargs)
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/plots/av_plot.py", line 27, in <module>
    plotbase.Plot
  File "/Users/tpeulen/development/fluorescence-tools/chisurf/chisurf/plots/av_plot.py", line 51, in AvPlot
    fit: chisurf.fitting.fit.FitGroup,
AttributeError: module 'ChiSurf' has no attribute 'fitting'


---------

Model Structure add dataset

---------------------------------------------------------------------------
HTTPError                                 Traceback (most recent call last)
<ipython-input-4-9fb921ec1189> in <module>
----> 1 chisurf.macros.add_dataset(filename="None")

~/development/fluorescence-tools/chisurf/chisurf/macros/__init__.py in add_dataset(expriment_reader, dataset, **kwargs)
    246     if dataset is None:
    247         dataset = expriment_reader.get_data(
--> 248             **kwargs
    249         )
    250     dataset_group = dataset if isinstance(

~/development/fluorescence-tools/chisurf/chisurf/experiments/reader.py in get_data(self, **kwargs)
     61     ) -> chisurf.experiments.data.ExperimentDataGroup:
     62         data = self.read(
---> 63             **kwargs
     64         )
     65         if isinstance(

~/development/fluorescence-tools/chisurf/chisurf/experiments/modelling.py in read(self, filename, **kwargs)
     43             **kwargs
     44     ):
---> 45         self.pdbWidget.load(filename=filename)
     46         s = self.pdbWidget.structure
     47         s.setup = self

~/development/fluorescence-tools/chisurf/chisurf/fio/widgets.py in load(self, filename)
    189             )
    190         self.filename = filename
--> 191         self.structure = self.filename
    192         self.lineEdit.setText(str(self.structure.n_atoms))
    193         self.lineEdit_2.setText(str(self.structure.n_residues))

~/development/fluorescence-tools/chisurf/chisurf/fio/widgets.py in structure(self, v)
    213         self._data = chisurf.structure.Structure(
    214             v,
--> 215             make_coarse=self.calcLookUp
    216         )
    217

~/development/fluorescence-tools/chisurf/chisurf/structure/structure.py in __init__(self, p_object, auto_update, filename, verbose, pdb_id, protonate, *args, **kwargs)
    149                 self.filename = p_object
    150             elif len(p_object) == 4:
--> 151                 self._atoms = self.io.fetch_pdb(p_object)
    152                 self.pdbid = p_object
    153             else:

~/development/fluorescence-tools/chisurf/chisurf/fio/coordinates.py in fetch_pdb(pdb_id, **kwargs)
     72         **kwargs
     73 ):
---> 74     st = fetch_pdb_string(pdb_id)
     75     return parse_string_pdb(st, **kwargs)
     76

~/development/fluorescence-tools/chisurf/chisurf/fio/coordinates.py in fetch_pdb_string(pdb_id)
     64     """
     65     url = 'http://www.rcsb.org/pdb/files/%s.pdb' % pdb_id[:4]
---> 66     binary = urllib.request.urlopen(url).read()
     67     return binary.decode("utf-8")
     68

~/miniconda3/lib/python3.7/urllib/request.py in urlopen(url, data, timeout, cafile, capath, cadefault, context)
    220     else:
    221         opener = _opener
--> 222     return opener.open(url, data, timeout)
    223
    224 def install_opener(opener):

~/miniconda3/lib/python3.7/urllib/request.py in open(self, fullurl, data, timeout)
    529         for processor in self.process_response.get(protocol, []):
    530             meth = getattr(processor, meth_name)
--> 531             response = meth(req, response)
    532
    533         return response

~/miniconda3/lib/python3.7/urllib/request.py in http_response(self, request, response)
    639         if not (200 <= code < 300):
    640             response = self.parent.error(
--> 641                 'http', request, response, code, msg, hdrs)
    642
    643         return response

~/miniconda3/lib/python3.7/urllib/request.py in error(self, proto, *args)
    561             http_err = 0
    562         args = (dict, proto, meth_name) + args
--> 563         result = self._call_chain(*args)
    564         if result:
    565             return result

~/miniconda3/lib/python3.7/urllib/request.py in _call_chain(self, chain, kind, meth_name, *args)
    501         for handler in handlers:
    502             func = getattr(handler, meth_name)
--> 503             result = func(*args)
    504             if result is not None:
    505                 return result

~/miniconda3/lib/python3.7/urllib/request.py in http_error_302(self, req, fp, code, msg, headers)
    753         fp.close()
    754
--> 755         return self.parent.open(new, timeout=req.timeout)
    756
    757     http_error_301 = http_error_303 = http_error_307 = http_error_302

~/miniconda3/lib/python3.7/urllib/request.py in open(self, fullurl, data, timeout)
    529         for processor in self.process_response.get(protocol, []):
    530             meth = getattr(processor, meth_name)
--> 531             response = meth(req, response)
    532
    533         return response

~/miniconda3/lib/python3.7/urllib/request.py in http_response(self, request, response)
    639         if not (200 <= code < 300):
    640             response = self.parent.error(
--> 641                 'http', request, response, code, msg, hdrs)
    642
    643         return response

~/miniconda3/lib/python3.7/urllib/request.py in error(self, proto, *args)
    567         if http_err:
    568             args = (dict, 'default', 'http_error_default') + orig_args
--> 569             return self._call_chain(*args)
    570
    571 # XXX probably also want an abstract factory that knows when it makes

~/miniconda3/lib/python3.7/urllib/request.py in _call_chain(self, chain, kind, meth_name, *args)
    501         for handler in handlers:
    502             func = getattr(handler, meth_name)
--> 503             result = func(*args)
    504             if result is not None:
    505                 return result

~/miniconda3/lib/python3.7/urllib/request.py in http_error_default(self, req, fp, code, msg, hdrs)
    647 class HTTPDefaultErrorHandler(BaseHandler):
    648     def http_error_default(self, req, fp, code, msg, hdrs):
--> 649         raise HTTPError(req.full_url, code, msg, hdrs, fp)
    650
    651 class HTTPRedirectHandler(BaseHandler):

HTTPError: HTTP Error 404: Not Found

---------
Correlator crashes when data is split into too many parts
-----------

