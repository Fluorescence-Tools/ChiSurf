stages:
  - build
  - test

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

build linux:
  stage: build
  tags:
    - linux
  image: continuumio/miniconda3:latest
  script:
    - echo "I am a build stage job for linux, running on docker using continuumio/miniconda3:latest image"
    - source activate base
    - |
      conda config \
        --add channels defaults \
        --add channels salilab \
        --add channels conda-forge \
        --add channels tpeulen \
        --add channels tpeulen/label/nightly
    - conda install mamba boa -n base
    - conda mambabuild conda-recipe --output-folder bld-dir
  artifacts:
    paths:
    - bld-dir

test linux:
  stage: test
  tags:
    - linux
  image: continuumio/miniconda3:latest
  dependencies:
    - build linux
  before_script:
    # Address issue with OpenGL and X11 display
    # See: https://stackoverflow.com/questions/65675765/is-it-possible-to-run-x11-on-gitlab-ci
    # See: https://github.com/conda-forge/pygridgen-feedstock/issues/10
    # procps is used to grep the process by name to kill it when needed
    - apt update -y
    - |
      apt install -y \
        libicu-dev libpng-dev \
        xorg-dev \
        libxinerama1 libxcursor1 libgl1-mesa-glx libglew-dev \
        libglu1-mesa libgl1-mesa-dev \
        libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev zlib1g-dev \
        xvfb procps
  script:
    - echo "I am a testing stage job for linux, running on docker using continuumio/miniconda3:latest image"
    - source activate base
    - conda install mamba -n base
    - conda config --add channels "file://`pwd`/bld-dir"
    - mamba install install chisurf python=3.7.3
    - |
      # Disable Numba JIT for correct coverage analysis
      export NUMBA_DISABLE_JIT=1
      pip install codacy-coverage
      python setup.py build_ext --inplace --force
      xvfb-run --server-args="-screen 0 1280x1024x24 +extension GLX" -a nosetests --with-coverage test/test_*.py;
